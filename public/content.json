[{"categoryHeading":"Object Helpers","entries":[{"name":"mapKeys","manifest":{"fnSignature":"mapKeys(obj, fn)","summary":"Constructs a new object where each key in `obj` has been mapped by `fn` to a new key."},"description":"# Parameters\n\n- `obj`\n\n  The object to be processed\n\n- `fn`\n\n  A callback that will be called with each key in the object. This function should return a transformed key that will be used to construct the new object. The callback accepts the following parameters:\n\n  - `key`: The current key to transform.\n\n# Examples\n\n```\n> mapKeys({key1: 2, key2: 3}, k => `prefix_${k}`)\n{prefix_key1: 2, prefix_key2: 3}\n```\n\n# Additional Information\n\nAny attributes in `obj`'s prototype will be ignored.\n","src":"function mapKeys(obj, fn) {\n  const newObj = {};\n  for (const [key, value] of Object.entries(obj)) {\n    newObj[fn(key)] = value;\n  }\n  return newObj;\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,109,97,112,75,101,121,115,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,105,116,40,39,109,97,112,115,32,107,101,121,115,32,105,110,32,111,98,106,101,99,116,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,108,100,79,98,106,32,61,32,123,32,97,58,32,50,44,32,98,58,32,51,32,125,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,79,98,106,32,61,32,95,46,109,97,112,75,101,121,115,40,111,108,100,79,98,106,44,32,107,32,61,62,32,107,32,43,32,107,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,79,98,106,41,46,116,111,69,113,117,97,108,40,123,32,97,97,58,32,50,44,32,98,98,58,32,51,32,125,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,111,110,108,121,32,109,97,112,115,32,111,119,110,32,40,110,111,110,45,105,110,104,101,114,105,116,101,100,41,32,118,97,108,117,101,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,108,97,115,115,32,77,121,67,108,97,115,115,32,123,10,32,32,32,32,32,32,120,32,61,32,50,59,10,32,32,32,32,32,32,102,40,41,32,123,125,10,32,32,32,32,125,10,10,32,32,32,32,99,111,110,115,116,32,111,108,100,79,98,106,32,61,32,110,101,119,32,77,121,67,108,97,115,115,40,41,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,79,98,106,32,61,32,95,46,109,97,112,75,101,121,115,40,111,108,100,79,98,106,44,32,107,32,61,62,32,107,32,43,32,107,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,79,98,106,41,46,116,111,69,113,117,97,108,40,123,32,120,120,58,32,50,32,125,41,59,10,32,32,125,41,59,10,125,41,59,10]}},{"name":"mapValues","manifest":{"fnSignature":"mapValues(obj, fn)","summary":"Constructs a new object where each value in `obj` has been mapped by `fn` to a new value."},"description":"# Parameters\n\n- `obj`\n\n  The object to be processed\n\n- `fn`\n\n  A callback that will be called with each value in the object. This function should return a transformed value that will be used to construct the new object. The callback accepts the following parameters:\n\n  - `value`: The current value to transform.\n\n# Examples\n\n```\n> mapValues({a: 2, b: 3}, x => x**2)\n{a: 4, b: 9}\n```\n\n# Additional Information\n\nAny attributes in `obj`'s prototype will be ignored.\n","src":"function mapValues(obj, fn) {\n  const newObj = {};\n  for (const [key, value] of Object.entries(obj)) {\n    newObj[key] = fn(value);\n  }\n  return newObj;\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,109,97,112,86,97,108,117,101,115,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,105,116,40,39,109,97,112,115,32,118,97,108,117,101,115,32,105,110,32,111,98,106,101,99,116,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,108,100,79,98,106,32,61,32,123,32,97,58,32,50,44,32,98,58,32,51,32,125,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,79,98,106,32,61,32,95,46,109,97,112,86,97,108,117,101,115,40,111,108,100,79,98,106,44,32,120,32,61,62,32,120,32,43,32,49,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,79,98,106,41,46,116,111,69,113,117,97,108,40,123,32,97,58,32,51,44,32,98,58,32,52,32,125,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,111,110,108,121,32,109,97,112,115,32,111,119,110,32,40,110,111,110,45,105,110,104,101,114,105,116,101,100,41,32,118,97,108,117,101,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,108,97,115,115,32,77,121,67,108,97,115,115,32,123,10,32,32,32,32,32,32,120,32,61,32,50,59,10,32,32,32,32,32,32,102,40,41,32,123,125,10,32,32,32,32,125,10,10,32,32,32,32,99,111,110,115,116,32,111,108,100,79,98,106,32,61,32,110,101,119,32,77,121,67,108,97,115,115,40,41,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,79,98,106,32,61,32,95,46,109,97,112,86,97,108,117,101,115,40,111,108,100,79,98,106,44,32,120,32,61,62,32,120,32,43,32,49,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,79,98,106,41,46,116,111,69,113,117,97,108,40,123,32,120,58,32,51,32,125,41,59,10,32,32,125,41,59,10,125,41,59,10]}},{"name":"invert","manifest":{"fnSignature":"invert(obj)","summary":"Constructs a new object that maps `obj`'s values to its keys."},"description":"# Parameters\n\n- `obj`\n\n  The object to invert.\n\n# Examples\n\n```\n> invert({five: '5', six: '6'})\n{5: \"five\", 6: \"six\"}\n```\n\n# Additional Information\n\nAny attributes in `obj`'s prototype will be ignored.\n","src":"function invert(obj) {\n  const newObj = {};\n  for (const [key, value] of Object.entries(obj)) {\n    newObj[value] = key;\n  }\n  return newObj;\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,105,110,118,101,114,116,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,105,116,40,39,105,110,118,101,114,116,115,32,107,101,121,115,32,97,110,100,32,118,97,108,117,101,115,32,111,102,32,97,110,32,111,98,106,101,99,116,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,108,100,79,98,106,32,61,32,123,32,97,58,32,50,44,32,98,58,32,51,32,125,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,79,98,106,32,61,32,95,46,105,110,118,101,114,116,40,111,108,100,79,98,106,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,79,98,106,41,46,116,111,69,113,117,97,108,40,123,32,50,58,32,39,97,39,44,32,51,58,32,39,98,39,32,125,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,111,110,108,121,32,109,97,112,115,32,111,119,110,32,40,110,111,110,45,105,110,104,101,114,105,116,101,100,41,32,118,97,108,117,101,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,108,97,115,115,32,77,121,67,108,97,115,115,32,123,10,32,32,32,32,32,32,120,32,61,32,50,59,10,32,32,32,32,32,32,102,40,41,32,123,125,10,32,32,32,32,125,10,10,32,32,32,32,99,111,110,115,116,32,111,108,100,79,98,106,32,61,32,110,101,119,32,77,121,67,108,97,115,115,40,41,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,79,98,106,32,61,32,95,46,105,110,118,101,114,116,40,111,108,100,79,98,106,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,79,98,106,41,46,116,111,69,113,117,97,108,40,123,32,50,58,32,39,120,39,32,125,41,59,10,32,32,125,41,59,10,125,41,59,10]}}]},{"categoryHeading":"Array Helpers","entries":[{"name":"intersection","manifest":{"fnSignature":"intersection(array1, array2)","summary":"Returns an array of elements that exist in both `array1` and `array2`"},"description":"","src":"function intersection(array1, array2) {\n  return array1.filter(x => array2.includes(x));\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,105,110,116,101,114,115,101,99,116,105,111,110,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,105,116,40,39,102,105,110,100,115,32,99,111,109,109,111,110,32,101,108,101,109,101,110,116,115,32,105,110,32,116,104,101,32,97,114,114,97,121,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,101,120,112,101,99,116,40,95,46,105,110,116,101,114,115,101,99,116,105,111,110,40,91,39,97,39,44,32,39,98,39,44,32,39,99,39,93,44,32,91,39,98,39,44,32,39,99,39,44,32,39,100,39,93,41,41,46,116,111,69,113,117,97,108,40,91,10,32,32,32,32,32,32,39,98,39,44,10,32,32,32,32,32,32,39,99,39,44,10,32,32,32,32,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,114,101,116,117,114,110,115,32,97,110,32,101,109,112,116,121,32,97,114,114,97,121,32,119,104,101,110,32,110,111,32,99,111,109,109,111,110,32,101,108,101,109,101,110,116,115,32,101,120,105,115,116,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,101,120,112,101,99,116,40,95,46,105,110,116,101,114,115,101,99,116,105,111,110,40,91,39,120,39,93,44,32,91,39,121,39,93,41,41,46,116,111,69,113,117,97,108,40,91,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,114,101,116,117,114,110,115,32,97,110,32,101,109,112,116,121,32,97,114,114,97,121,32,119,104,101,110,32,105,110,112,117,116,32,97,114,114,97,121,115,32,97,114,101,32,101,109,112,116,121,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,101,120,112,101,99,116,40,95,46,105,110,116,101,114,115,101,99,116,105,111,110,40,91,93,44,32,91,93,41,41,46,116,111,69,113,117,97,108,40,91,93,41,59,10,32,32,125,41,59,10,125,41,59,10]}},{"name":"difference","manifest":{"fnSignature":"difference(array1, array2)","summary":"Returns an array of elements that are in `array1` but not in `array2`."},"description":"","src":"function difference(array1, array2) {\n  return array1.filter(x => !array2.includes(x));\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,100,105,102,102,101,114,101,110,99,101,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,105,116,40,39,99,97,108,99,117,108,97,116,101,115,32,116,104,101,32,100,105,102,102,101,114,101,110,99,101,32,111,102,32,116,119,111,32,97,114,114,97,121,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,101,120,112,101,99,116,40,95,46,100,105,102,102,101,114,101,110,99,101,40,91,39,97,39,44,32,39,98,39,44,32,39,99,39,93,44,32,91,39,99,39,44,32,39,100,39,93,41,41,46,116,111,69,113,117,97,108,40,91,39,97,39,44,32,39,98,39,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,114,101,116,117,114,110,115,32,97,110,32,101,109,112,116,121,32,97,114,114,97,121,32,119,104,101,110,32,97,108,108,32,101,108,101,109,101,110,116,115,32,97,114,101,32,114,101,109,111,118,101,100,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,101,120,112,101,99,116,40,95,46,100,105,102,102,101,114,101,110,99,101,40,91,39,120,39,93,44,32,91,39,120,39,44,32,39,121,39,93,41,41,46,116,111,69,113,117,97,108,40,91,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,114,101,116,117,114,110,115,32,97,110,32,101,109,112,116,121,32,97,114,114,97,121,32,119,104,101,110,32,105,110,112,117,116,32,97,114,114,97,121,115,32,97,114,101,32,101,109,112,116,121,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,101,120,112,101,99,116,40,95,46,100,105,102,102,101,114,101,110,99,101,40,91,93,44,32,91,93,41,41,46,116,111,69,113,117,97,108,40,91,93,41,59,10,32,32,125,41,59,10,125,41,59,10]}},{"name":"zip","manifest":{"fnSignature":"zip(...arrays)","summary":"Allows iterating over multiple arrays at the same time."},"description":"","src":"function* zip(...arrays) {\n  if (arrays.length === 0) return;\n  const minLength = Math.min(...arrays.map(arr => arr.length));\n  for (let i = 0; i < minLength; ++i) {\n    yield arrays.map(arr => arr[i]);\n  }\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,122,105,112,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,99,111,110,115,116,32,114,97,110,103,101,32,61,32,40,115,116,97,114,116,44,32,115,116,111,112,41,32,61,62,10,32,32,32,32,65,114,114,97,121,46,102,114,111,109,40,123,32,108,101,110,103,116,104,58,32,115,116,111,112,32,45,32,115,116,97,114,116,32,125,44,32,40,95,44,32,105,41,32,61,62,32,105,32,43,32,115,116,97,114,116,41,59,10,10,32,32,105,116,40,39,122,105,112,115,32,117,112,32,97,114,114,97,121,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,122,105,112,112,101,100,32,61,32,91,46,46,46,95,46,122,105,112,40,114,97,110,103,101,40,48,44,32,51,41,44,32,114,97,110,103,101,40,51,44,32,54,41,41,93,59,10,32,32,32,32,101,120,112,101,99,116,40,122,105,112,112,101,100,41,46,116,111,69,113,117,97,108,40,91,10,32,32,32,32,32,32,91,48,44,32,51,93,44,10,32,32,32,32,32,32,91,49,44,32,52,93,44,10,32,32,32,32,32,32,91,50,44,32,53,93,44,10,32,32,32,32,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,100,105,115,99,97,114,100,115,32,101,108,101,109,101,110,116,115,32,102,114,111,109,32,108,111,110,103,101,114,32,97,114,114,97,121,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,122,105,112,112,101,100,32,61,32,91,46,46,46,95,46,122,105,112,40,114,97,110,103,101,40,48,44,32,51,41,44,32,114,97,110,103,101,40,51,44,32,57,41,41,93,59,10,32,32,32,32,101,120,112,101,99,116,40,122,105,112,112,101,100,41,46,116,111,69,113,117,97,108,40,91,10,32,32,32,32,32,32,91,48,44,32,51,93,44,10,32,32,32,32,32,32,91,49,44,32,52,93,44,10,32,32,32,32,32,32,91,50,44,32,53,93,44,10,32,32,32,32,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,122,105,112,115,32,117,112,32,116,104,114,101,101,32,97,114,114,97,121,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,122,105,112,112,101,100,32,61,32,91,46,46,46,95,46,122,105,112,40,91,49,44,32,52,93,44,32,91,50,44,32,53,93,44,32,91,51,44,32,54,93,41,93,59,10,32,32,32,32,101,120,112,101,99,116,40,122,105,112,112,101,100,41,46,116,111,69,113,117,97,108,40,91,10,32,32,32,32,32,32,91,49,44,32,50,44,32,51,93,44,10,32,32,32,32,32,32,91,52,44,32,53,44,32,54,93,44,10,32,32,32,32,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,122,105,112,115,32,117,112,32,97,32,115,105,110,103,108,101,32,97,114,114,97,121,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,122,105,112,112,101,100,32,61,32,91,46,46,46,95,46,122,105,112,40,91,49,44,32,50,44,32,51,93,41,93,59,10,32,32,32,32,101,120,112,101,99,116,40,122,105,112,112,101,100,41,46,116,111,69,113,117,97,108,40,91,91,49,93,44,32,91,50,93,44,32,91,51,93,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,122,105,112,115,32,117,112,32,110,111,32,97,114,114,97,121,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,122,105,112,112,101,100,32,61,32,91,46,46,46,95,46,122,105,112,40,41,93,59,10,32,32,32,32,101,120,112,101,99,116,40,122,105,112,112,101,100,41,46,116,111,69,113,117,97,108,40,91,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,122,105,112,115,32,117,112,32,101,109,112,116,121,32,97,114,114,97,121,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,122,105,112,112,101,100,32,61,32,91,46,46,46,95,46,122,105,112,40,91,93,44,32,91,93,41,93,59,10,32,32,32,32,101,120,112,101,99,116,40,122,105,112,112,101,100,41,46,116,111,69,113,117,97,108,40,91,93,41,59,10,32,32,125,41,59,10,125,41,59,10]}}]},{"categoryHeading":"String Helpers","entries":[{"name":"truncate","manifest":{"fnSignature":"truncate(str, maxSize, options?)","summary":"Truncates `str` and append an ellipse when it's length exceeds `maxSize`"},"description":"","src":"function truncate(str, maxSize, { truncIndicator = '…' } = {}) {\n  if (str.length <= maxSize) return str;\n  return str.slice(0, maxSize) + truncIndicator;\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,116,114,117,110,99,97,116,101,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,105,116,40,39,100,111,101,115,32,110,111,116,32,109,111,100,105,102,121,32,97,32,115,116,114,105,110,103,32,119,105,116,104,105,110,32,116,104,101,32,115,105,122,101,32,108,105,109,105,116,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,117,110,99,97,116,101,40,39,97,98,99,100,101,39,44,32,53,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,66,101,40,39,97,98,99,100,101,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,116,114,117,110,99,97,116,101,115,32,115,116,114,105,110,103,115,32,116,104,97,116,32,97,114,101,32,116,111,111,32,108,97,114,103,101,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,117,110,99,97,116,101,40,39,97,98,99,100,101,102,39,44,32,53,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,66,101,40,39,97,98,99,100,101,226,128,166,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,97,108,108,111,119,115,32,116,114,117,110,99,97,116,101,32,105,110,100,105,99,97,116,111,114,32,116,111,32,98,101,32,99,117,115,116,111,109,105,122,101,100,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,117,110,99,97,116,101,40,39,97,98,99,100,101,102,39,44,32,53,44,32,123,32,116,114,117,110,99,73,110,100,105,99,97,116,111,114,58,32,39,46,46,46,39,32,125,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,66,101,40,39,97,98,99,100,101,46,46,46,39,41,59,10,32,32,125,41,59,10,125,41,59,10]}},{"name":"trim","manifest":{"fnSignature":"trim(str, toRemove?)","summary":"Trims characters from both ends of the string `str` that are found in the string `toRemove`."},"description":"","src":"function trim(str, toRemove = ' \\t\\n') {\n  const chars = str.split('');\n  while (chars.length && toRemove.includes(chars[0])) chars.shift();\n  while (chars.length && toRemove.includes(chars.at(-1))) chars.pop();\n  return chars.join('');\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,116,114,105,109,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,105,116,40,39,116,114,105,109,115,32,99,104,97,114,97,99,116,101,114,115,32,102,114,111,109,32,98,111,116,104,32,115,105,100,101,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,40,39,32,92,116,92,110,32,97,98,99,32,32,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,97,98,99,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,99,97,110,32,116,114,105,109,32,100,111,119,110,32,116,111,32,97,110,32,101,109,112,116,121,32,115,116,114,105,110,103,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,40,39,32,32,92,110,92,116,32,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,34,100,111,101,115,32,110,111,116,32,116,114,105,109,32,119,104,101,110,32,116,104,101,114,101,39,115,32,110,111,116,104,105,110,103,32,116,111,32,116,114,105,109,34,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,40,39,97,98,99,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,97,98,99,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,99,97,110,32,117,115,101,32,99,117,115,116,111,109,32,116,114,105,109,32,99,104,97,114,97,99,116,101,114,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,40,39,88,89,97,98,99,88,89,88,39,44,32,39,88,89,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,97,98,99,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,34,119,111,110,39,116,32,116,114,105,109,32,97,110,121,116,104,105,110,103,32,105,102,32,97,110,32,101,109,112,116,121,32,115,116,114,105,110,103,32,105,115,32,112,114,111,118,105,100,101,100,32,102,111,114,32,116,104,101,32,116,114,105,109,32,99,104,97,114,97,99,116,101,114,115,34,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,40,39,32,97,98,99,32,39,44,32,39,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,32,97,98,99,32,39,41,59,10,32,32,125,41,59,10,125,41,59,10]}},{"name":"trimLeft","manifest":{"fnSignature":"trimLeft(str, toRemove?)","summary":"Trims characters from the left end of the string `str` that are found in the string `toRemove`."},"description":"","src":"function trimLeft(str, toRemove = ' \\t\\n') {\n  const leftBound = str.split('').findIndex(c => !toRemove.includes(c));\n  return leftBound === -1 ? '' : str.slice(leftBound);\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,116,114,105,109,76,101,102,116,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,105,116,40,39,116,114,105,109,115,32,99,104,97,114,97,99,116,101,114,115,32,102,114,111,109,32,116,104,101,32,108,101,102,116,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,76,101,102,116,40,39,32,92,116,92,110,32,97,98,99,32,32,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,97,98,99,32,32,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,99,97,110,32,116,114,105,109,32,100,111,119,110,32,116,111,32,97,110,32,101,109,112,116,121,32,115,116,114,105,110,103,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,76,101,102,116,40,39,32,32,92,110,92,116,32,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,34,100,111,101,115,32,110,111,116,32,116,114,105,109,32,119,104,101,110,32,116,104,101,114,101,39,115,32,110,111,116,104,105,110,103,32,116,111,32,116,114,105,109,34,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,76,101,102,116,40,39,97,98,99,32,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,97,98,99,32,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,99,97,110,32,117,115,101,32,99,117,115,116,111,109,32,116,114,105,109,32,99,104,97,114,97,99,116,101,114,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,76,101,102,116,40,39,89,88,97,98,99,88,89,88,39,44,32,39,88,89,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,97,98,99,88,89,88,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,34,119,111,110,39,116,32,116,114,105,109,32,97,110,121,116,104,105,110,103,32,105,102,32,97,110,32,101,109,112,116,121,32,115,116,114,105,110,103,32,105,115,32,112,114,111,118,105,100,101,100,32,102,111,114,32,116,104,101,32,116,114,105,109,32,99,104,97,114,97,99,116,101,114,115,34,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,76,101,102,116,40,39,32,97,98,99,32,39,44,32,39,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,32,97,98,99,32,39,41,59,10,32,32,125,41,59,10,125,41,59,10]}},{"name":"trimRight","manifest":{"fnSignature":"trimRight(str, toRemove?)","summary":"Trims characters from the right end of the string `str` that are found in the string `toRemove`."},"description":"","src":"function trimRight(str, toRemove = ' \\t\\n') {\n  const chars = str.split('');\n  while (chars.length && toRemove.includes(chars[chars.length - 1])) {\n    chars.pop();\n  }\n  return chars.join('');\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,116,114,105,109,82,105,103,104,116,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,105,116,40,39,116,114,105,109,115,32,99,104,97,114,97,99,116,101,114,115,32,102,114,111,109,32,116,104,101,32,114,105,103,104,116,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,82,105,103,104,116,40,39,32,92,116,92,110,32,97,98,99,32,32,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,32,92,116,92,110,32,97,98,99,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,99,97,110,32,116,114,105,109,32,100,111,119,110,32,116,111,32,97,110,32,101,109,112,116,121,32,115,116,114,105,110,103,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,82,105,103,104,116,40,39,32,32,92,110,92,116,32,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,34,100,111,101,115,32,110,111,116,32,116,114,105,109,32,119,104,101,110,32,116,104,101,114,101,39,115,32,110,111,116,104,105,110,103,32,116,111,32,116,114,105,109,34,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,82,105,103,104,116,40,39,32,97,98,99,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,32,97,98,99,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,99,97,110,32,117,115,101,32,99,117,115,116,111,109,32,116,114,105,109,32,99,104,97,114,97,99,116,101,114,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,82,105,103,104,116,40,39,89,88,97,98,99,88,89,88,39,44,32,39,88,89,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,89,88,97,98,99,39,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,34,119,111,110,39,116,32,116,114,105,109,32,97,110,121,116,104,105,110,103,32,105,102,32,97,110,32,101,109,112,116,121,32,115,116,114,105,110,103,32,105,115,32,112,114,111,118,105,100,101,100,32,102,111,114,32,116,104,101,32,116,114,105,109,32,99,104,97,114,97,99,116,101,114,115,34,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,95,46,116,114,105,109,82,105,103,104,116,40,39,32,97,98,99,32,39,44,32,39,39,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,39,32,97,98,99,32,39,41,59,10,32,32,125,41,59,10,125,41,59,10]}}]},{"categoryHeading":"Helper Functions for Randomness","entries":[{"name":"randomInt","manifest":{"fnSignature":"randomInt(min, max)","summary":"Returns a random integer between `min` and `max` (but not including `max`)."},"description":"","src":"function randomInt(min, max) {\n  return min + Math.floor(Math.random() * (max - min));\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,114,97,110,100,111,109,73,110,116,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,99,111,110,115,116,32,84,69,83,84,95,82,69,80,69,84,73,84,73,79,78,83,32,61,32,53,48,59,10,10,32,32,105,116,40,39,114,101,116,117,114,110,115,32,97,32,110,117,109,98,101,114,32,119,105,116,104,105,110,32,116,104,101,32,98,111,117,110,100,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,84,69,83,84,95,82,69,80,69,84,73,84,73,79,78,83,59,32,43,43,105,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,117,108,116,32,61,32,95,46,114,97,110,100,111,109,73,110,116,40,53,44,32,49,48,41,59,10,32,32,32,32,32,32,101,120,112,101,99,116,40,114,101,115,117,108,116,41,46,116,111,66,101,71,114,101,97,116,101,114,84,104,97,110,79,114,69,113,117,97,108,40,53,41,59,10,32,32,32,32,32,32,101,120,112,101,99,116,40,114,101,115,117,108,116,41,46,116,111,66,101,76,101,115,115,84,104,97,110,40,49,48,41,59,10,32,32,32,32,125,10,32,32,125,41,59,10,10,32,32,105,116,40,39,114,101,116,117,114,110,115,32,97,32,119,104,111,108,101,32,110,117,109,98,101,114,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,84,69,83,84,95,82,69,80,69,84,73,84,73,79,78,83,59,32,43,43,105,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,117,108,116,32,61,32,95,46,114,97,110,100,111,109,73,110,116,40,53,44,32,49,48,41,59,10,32,32,32,32,32,32,101,120,112,101,99,116,40,77,97,116,104,46,114,111,117,110,100,40,114,101,115,117,108,116,41,41,46,116,111,66,101,40,114,101,115,117,108,116,41,59,10,32,32,32,32,125,10,32,32,125,41,59,10,125,41,59,10]}},{"name":"randomChoice","manifest":{"fnSignature":"randomChoice(array)","summary":"Returns a random element from `array`."},"description":"","src":"function randomChoice(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,114,97,110,100,111,109,67,104,111,105,99,101,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,99,111,110,115,116,32,84,69,83,84,95,82,69,80,69,84,73,84,73,79,78,83,32,61,32,49,48,59,10,10,32,32,105,116,40,39,114,101,116,117,114,110,115,32,97,110,32,101,108,101,109,101,110,116,32,102,114,111,109,32,116,104,101,32,111,114,105,103,105,110,97,108,32,97,114,114,97,121,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,84,69,83,84,95,82,69,80,69,84,73,84,73,79,78,83,59,32,43,43,105,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,97,114,114,97,121,32,61,32,91,39,97,39,44,32,39,98,39,44,32,39,99,39,44,32,39,100,39,44,32,39,101,39,93,59,10,32,32,32,32,32,32,101,120,112,101,99,116,40,97,114,114,97,121,41,46,116,111,67,111,110,116,97,105,110,40,95,46,114,97,110,100,111,109,67,104,111,105,99,101,40,97,114,114,97,121,41,41,59,10,32,32,32,32,125,10,32,32,125,41,59,10,125,41,59,10]}},{"name":"shuffle","manifest":{"fnSignature":"shuffle(array)","summary":"Returns a copy of `array` that has been shuffled."},"description":"","src":"function shuffle(array) {\n  return array\n    .map(value => ({ value, sortKey: Math.random() }))\n    .sort((a, b) => a.sortKey - b.sortKey)\n    .map(({ value }) => value);\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,115,104,117,102,102,108,101,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,99,111,110,115,116,32,84,69,83,84,95,82,69,80,69,84,73,84,73,79,78,83,32,61,32,49,48,59,10,10,32,32,105,116,40,39,114,101,116,117,114,110,115,32,97,110,32,97,114,114,97,121,32,119,105,116,104,32,101,110,116,114,105,101,115,32,116,104,97,116,32,97,114,101,32,97,108,108,32,105,110,32,116,104,101,32,111,114,105,103,105,110,97,108,32,97,114,114,97,121,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,84,69,83,84,95,82,69,80,69,84,73,84,73,79,78,83,59,32,43,43,105,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,111,114,105,103,105,110,97,108,65,114,114,97,121,32,61,32,91,39,97,39,44,32,39,98,39,44,32,39,99,39,44,32,39,100,39,44,32,39,101,39,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,117,108,116,32,61,32,95,46,115,104,117,102,102,108,101,40,111,114,105,103,105,110,97,108,65,114,114,97,121,41,59,10,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,101,110,116,114,121,32,111,102,32,114,101,115,117,108,116,41,32,123,10,32,32,32,32,32,32,32,32,101,120,112,101,99,116,40,111,114,105,103,105,110,97,108,65,114,114,97,121,41,46,116,111,67,111,110,116,97,105,110,40,101,110,116,114,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,41,59,10,10,32,32,105,116,40,39,114,101,116,117,114,110,115,32,97,110,32,97,114,114,97,121,32,119,104,101,114,101,32,97,108,108,32,101,110,116,114,105,101,115,32,111,102,32,116,104,101,32,111,114,105,103,105,110,97,108,32,97,114,114,97,121,32,97,114,101,32,102,111,117,110,100,32,105,110,32,116,104,101,32,114,101,116,117,114,110,101,100,32,111,110,101,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,84,69,83,84,95,82,69,80,69,84,73,84,73,79,78,83,59,32,43,43,105,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,111,114,105,103,105,110,97,108,65,114,114,97,121,32,61,32,91,39,97,39,44,32,39,98,39,44,32,39,99,39,44,32,39,100,39,44,32,39,101,39,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,117,108,116,32,61,32,95,46,115,104,117,102,102,108,101,40,111,114,105,103,105,110,97,108,65,114,114,97,121,41,59,10,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,101,110,116,114,121,32,111,102,32,111,114,105,103,105,110,97,108,65,114,114,97,121,41,32,123,10,32,32,32,32,32,32,32,32,101,120,112,101,99,116,40,114,101,115,117,108,116,41,46,116,111,67,111,110,116,97,105,110,40,101,110,116,114,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,41,59,10,125,41,59,10]}}]},{"categoryHeading":"HTML-Building Helpers","entries":[{"name":"el","manifest":{"fnSignature":"el(tagName, attrs?, children?)","summary":"Creates an HTML element."},"description":"# Parameters\n\n- `tagName`\n\n  The new element's tag\n\n- `attrs`\n\n  A mapping of attribute names to values\n\n- `children`\n\n  A list of child nodes. A child can either be a string, or an HTML element (e.g. one generated by el())\n\n# Examples\n\n```\nel('div', { id: 'my-div' }, [\n  el('span', {}, ['Hello']),\n  'World!',\n])\n\n/* The above results in the following HTML structure\n<div id=\"my-div\">\n  <span>Hello</span>\n  World!\n</div>\n*/\n```\n","src":"function el(tagName, attrs = {}, children = []) {\n  const newElement = document.createElement(tagName);\n  for (const [key, value] of Object.entries(attrs)) {\n    newElement.setAttribute(key, value);\n  }\n  newElement.append(...children);\n  return newElement;\n}\n"},{"name":"fragment","manifest":{"fnSignature":"fragment(tagName, attrs?, children?)","summary":"Creates an HTML fragment."},"description":"# Parameters\n\n- `children`\n\n  A list of child nodes. A child can either be a string, or an HTML element (e.g. one generated by el())\n\n# Examples\n\n```\nfragment([\n  // Using the el() snap.js function in this example.\n  el('span', {}, ['Hello']),\n  'World!',\n])\n\n/* The above results in the following HTML structure\n<span>Hello</span>\nWorld!\n*/\n```\n","src":"function fragment(children = []) {\n  const newFragment = new DocumentFragment();\n  newFragment.append(...children);\n  return newFragment;\n}\n"}]},{"categoryHeading":"Miscellaneous Helpers","entries":[{"name":"memoize","manifest":{"fnSignature":"memoize(fn, options?)","summary":"Returns a memoized version of `fn`. The results of calling the returned function gets cached, so when it's called again with the same arguments, the cached result will be returned."},"description":"","src":"function memoize(fn, { argsToKey = null } = {}) {\n  argsToKey =\n    argsToKey ??\n    ((...args) => {\n      if (args.length !== 1) {\n        throw new Error(\n          'Exactly one argument must be passed in to this memoized function ' +\n            '(unless a custom args-to-key mapper is provided)'\n        );\n      }\n      return args[0];\n    });\n\n  const cache = new Map();\n  return (...args) => {\n    const key = argsToKey(...args);\n    if (cache.has(key)) return cache.get(key);\n\n    const res = fn(...args);\n    cache.set(key, res);\n    return res;\n  };\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,109,101,109,111,105,122,101,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,105,116,40,39,99,97,99,104,101,115,32,116,104,101,32,114,101,115,117,108,116,32,111,102,32,116,104,101,32,102,117,110,99,116,105,111,110,32,99,97,108,108,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,114,105,103,105,110,97,108,70,110,32,61,32,106,101,115,116,46,102,110,40,120,32,61,62,32,120,32,43,32,49,41,59,10,32,32,32,32,99,111,110,115,116,32,109,101,109,111,105,122,101,100,70,110,32,61,32,95,46,109,101,109,111,105,122,101,40,111,114,105,103,105,110,97,108,70,110,41,59,10,10,32,32,32,32,101,120,112,101,99,116,40,109,101,109,111,105,122,101,100,70,110,40,53,41,41,46,116,111,66,101,40,54,41,59,10,32,32,32,32,111,114,105,103,105,110,97,108,70,110,46,109,111,99,107,82,101,116,117,114,110,86,97,108,117,101,40,110,117,108,108,41,59,10,32,32,32,32,101,120,112,101,99,116,40,109,101,109,111,105,122,101,100,70,110,40,53,41,41,46,116,111,66,101,40,54,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,99,97,99,104,101,115,32,116,104,101,32,112,114,111,109,105,115,101,32,119,104,101,110,32,116,104,101,32,99,97,108,108,98,97,99,107,32,105,115,32,97,115,121,110,99,39,44,32,97,115,121,110,99,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,114,105,103,105,110,97,108,70,110,32,61,32,106,101,115,116,46,102,110,40,97,115,121,110,99,32,120,32,61,62,32,120,32,43,32,49,41,59,10,32,32,32,32,99,111,110,115,116,32,109,101,109,111,105,122,101,100,70,110,32,61,32,95,46,109,101,109,111,105,122,101,40,111,114,105,103,105,110,97,108,70,110,41,59,10,10,32,32,32,32,99,111,110,115,116,32,112,114,111,109,105,115,101,49,32,61,32,109,101,109,111,105,122,101,100,70,110,40,53,41,46,116,104,101,110,40,120,32,61,62,32,101,120,112,101,99,116,40,120,41,46,116,111,66,101,40,54,41,41,59,10,32,32,32,32,111,114,105,103,105,110,97,108,70,110,46,109,111,99,107,82,101,116,117,114,110,86,97,108,117,101,40,52,51,41,59,10,32,32,32,32,99,111,110,115,116,32,112,114,111,109,105,115,101,50,32,61,32,109,101,109,111,105,122,101,100,70,110,40,53,41,46,116,104,101,110,40,120,32,61,62,32,101,120,112,101,99,116,40,120,41,46,116,111,66,101,40,54,41,41,59,10,10,32,32,32,32,97,119,97,105,116,32,80,114,111,109,105,115,101,46,97,108,108,40,91,112,114,111,109,105,115,101,49,44,32,112,114,111,109,105,115,101,50,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,99,97,110,32,99,97,99,104,101,32,109,117,108,116,105,112,108,101,32,105,116,101,109,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,114,105,103,105,110,97,108,70,110,32,61,32,106,101,115,116,46,102,110,40,120,32,61,62,32,120,32,43,32,49,41,59,10,32,32,32,32,99,111,110,115,116,32,109,101,109,111,105,122,101,100,70,110,32,61,32,95,46,109,101,109,111,105,122,101,40,111,114,105,103,105,110,97,108,70,110,41,59,10,10,32,32,32,32,101,120,112,101,99,116,40,109,101,109,111,105,122,101,100,70,110,40,53,41,41,46,116,111,66,101,40,54,41,59,10,32,32,32,32,101,120,112,101,99,116,40,109,101,109,111,105,122,101,100,70,110,40,54,41,41,46,116,111,66,101,40,55,41,59,10,32,32,32,32,111,114,105,103,105,110,97,108,70,110,46,109,111,99,107,82,101,116,117,114,110,86,97,108,117,101,40,110,117,108,108,41,59,10,32,32,32,32,101,120,112,101,99,116,40,109,101,109,111,105,122,101,100,70,110,40,53,41,41,46,116,111,66,101,40,54,41,59,10,32,32,32,32,101,120,112,101,99,116,40,109,101,109,111,105,122,101,100,70,110,40,54,41,41,46,116,111,66,101,40,55,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,100,111,101,115,32,110,111,116,32,97,108,108,111,119,32,48,32,97,114,103,117,109,101,110,116,115,32,119,104,101,110,32,116,104,101,32,100,101,102,97,117,108,116,32,99,111,109,112,97,114,105,115,111,110,32,102,117,110,99,116,105,111,110,32,105,115,32,117,115,101,100,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,109,101,109,111,105,122,101,100,70,110,32,61,32,95,46,109,101,109,111,105,122,101,40,40,41,32,61,62,32,123,125,41,59,10,32,32,32,32,101,120,112,101,99,116,40,40,41,32,61,62,32,109,101,109,111,105,122,101,100,70,110,40,41,41,46,116,111,84,104,114,111,119,40,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,100,111,101,115,32,110,111,116,32,97,108,108,111,119,32,109,117,108,116,105,112,108,101,32,97,114,103,117,109,101,110,116,115,32,119,104,101,110,32,116,104,101,32,100,101,102,97,117,108,116,32,99,111,109,112,97,114,105,115,111,110,32,102,117,110,99,116,105,111,110,32,105,115,32,117,115,101,100,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,109,101,109,111,105,122,101,100,70,110,32,61,32,95,46,109,101,109,111,105,122,101,40,40,41,32,61,62,32,123,125,41,59,10,32,32,32,32,101,120,112,101,99,116,40,40,41,32,61,62,32,109,101,109,111,105,122,101,100,70,110,40,49,44,32,50,41,41,46,116,111,84,104,114,111,119,40,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,97,99,99,101,112,116,115,32,97,32,99,117,115,116,111,109,32,99,111,109,112,97,114,105,115,111,110,32,102,117,110,99,116,105,111,110,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,114,105,103,105,110,97,108,70,110,32,61,32,106,101,115,116,46,102,110,40,40,120,44,32,121,41,32,61,62,32,120,32,42,32,121,41,59,10,32,32,32,32,99,111,110,115,116,32,109,101,109,111,105,122,101,100,70,110,32,61,32,95,46,109,101,109,111,105,122,101,40,111,114,105,103,105,110,97,108,70,110,44,32,123,32,97,114,103,115,84,111,75,101,121,58,32,40,120,44,32,121,41,32,61,62,32,120,32,43,32,121,32,125,41,59,10,10,32,32,32,32,101,120,112,101,99,116,40,109,101,109,111,105,122,101,100,70,110,40,50,44,32,51,41,41,46,116,111,66,101,40,54,41,59,10,32,32,32,32,111,114,105,103,105,110,97,108,70,110,46,109,111,99,107,82,101,116,117,114,110,86,97,108,117,101,40,110,117,108,108,41,59,10,32,32,32,32,101,120,112,101,99,116,40,109,101,109,111,105,122,101,100,70,110,40,52,44,32,49,41,41,46,116,111,66,101,40,54,41,59,10,32,32,125,41,59,10,125,41,59,10]}},{"name":"createEventEmitter","manifest":{"fnSignature":"createEventEmitter()","summary":"Creates a simple eventEmitter instance to aid with the pub-sub pattern of subscribing to events and notifying subscribers."},"description":"","src":"function createEventEmitter() {\n  const listeners = [];\n  return {\n    subscribe(fn) {\n      listeners.push(fn);\n      let unsubscribed = false;\n      return function unsubscribe() {\n        if (unsubscribed) return;\n        const index = listeners.indexOf(fn);\n        listeners.splice(index, 1);\n        unsubscribed = true;\n      };\n    },\n    trigger(...args) {\n      return listeners.map(fn => fn(...args));\n    },\n  };\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,99,114,101,97,116,101,69,118,101,110,116,69,109,105,116,116,101,114,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,105,116,40,39,116,114,105,103,103,101,114,115,32,115,117,98,115,99,114,105,98,101,100,32,101,118,101,110,116,115,32,119,105,116,104,32,97,114,103,117,109,101,110,116,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,101,118,101,110,116,32,61,32,95,46,99,114,101,97,116,101,69,118,101,110,116,69,109,105,116,116,101,114,40,41,59,10,32,32,32,32,99,111,110,115,116,32,115,112,121,49,32,61,32,106,101,115,116,46,102,110,40,41,59,10,32,32,32,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,115,112,121,49,41,59,10,32,32,32,32,99,111,110,115,116,32,115,112,121,50,32,61,32,106,101,115,116,46,102,110,40,41,59,10,32,32,32,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,115,112,121,50,41,59,10,10,32,32,32,32,101,118,101,110,116,46,116,114,105,103,103,101,114,40,49,44,32,50,41,59,10,32,32,32,32,101,120,112,101,99,116,40,115,112,121,49,41,46,116,111,72,97,118,101,66,101,101,110,67,97,108,108,101,100,87,105,116,104,40,49,44,32,50,41,59,10,32,32,32,32,101,120,112,101,99,116,40,115,112,121,50,41,46,116,111,72,97,118,101,66,101,101,110,67,97,108,108,101,100,87,105,116,104,40,49,44,32,50,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,114,101,116,117,114,110,115,32,116,104,101,32,114,101,115,117,108,116,115,32,111,102,32,116,104,101,32,115,117,98,115,99,114,105,98,101,100,32,102,117,110,99,116,105,111,110,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,101,118,101,110,116,32,61,32,95,46,99,114,101,97,116,101,69,118,101,110,116,69,109,105,116,116,101,114,40,41,59,10,32,32,32,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,40,41,32,61,62,32,50,41,59,10,32,32,32,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,40,41,32,61,62,32,51,41,59,10,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,101,118,101,110,116,46,116,114,105,103,103,101,114,40,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,91,50,44,32,51,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,105,115,32,99,97,112,97,98,108,101,32,111,102,32,104,97,118,105,110,103,32,97,115,121,110,99,32,115,117,98,115,99,114,105,98,101,114,115,39,44,32,97,115,121,110,99,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,101,118,101,110,116,32,61,32,95,46,99,114,101,97,116,101,69,118,101,110,116,69,109,105,116,116,101,114,40,41,59,10,32,32,32,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,97,115,121,110,99,32,40,41,32,61,62,32,50,41,59,10,32,32,32,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,97,115,121,110,99,32,40,41,32,61,62,32,51,41,59,10,10,32,32,32,32,99,111,110,115,116,32,114,101,115,32,61,32,97,119,97,105,116,32,80,114,111,109,105,115,101,46,97,108,108,40,101,118,101,110,116,46,116,114,105,103,103,101,114,40,41,41,59,10,32,32,32,32,101,120,112,101,99,116,40,114,101,115,41,46,116,111,69,113,117,97,108,40,91,50,44,32,51,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,105,115,32,99,97,112,97,98,108,101,32,111,102,32,98,101,105,110,103,32,116,114,105,103,103,101,114,101,100,32,109,117,108,116,105,112,108,101,32,116,105,109,101,115,44,32,119,105,116,104,32,110,101,119,32,115,117,98,115,99,114,105,98,101,114,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,101,118,101,110,116,32,61,32,95,46,99,114,101,97,116,101,69,118,101,110,116,69,109,105,116,116,101,114,40,41,59,10,32,32,32,32,101,120,112,101,99,116,40,101,118,101,110,116,46,116,114,105,103,103,101,114,40,41,41,46,116,111,69,113,117,97,108,40,91,93,41,59,10,10,32,32,32,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,40,41,32,61,62,32,49,41,59,10,32,32,32,32,101,120,112,101,99,116,40,101,118,101,110,116,46,116,114,105,103,103,101,114,40,41,41,46,116,111,69,113,117,97,108,40,91,49,93,41,59,10,10,32,32,32,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,40,41,32,61,62,32,50,41,59,10,32,32,32,32,101,120,112,101,99,116,40,101,118,101,110,116,46,116,114,105,103,103,101,114,40,41,41,46,116,111,69,113,117,97,108,40,91,49,44,32,50,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,97,108,108,111,119,115,32,117,110,115,117,98,115,99,114,105,98,105,110,103,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,101,118,101,110,116,32,61,32,95,46,99,114,101,97,116,101,69,118,101,110,116,69,109,105,116,116,101,114,40,41,59,10,10,32,32,32,32,99,111,110,115,116,32,117,110,115,117,98,115,99,114,105,98,101,32,61,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,40,41,32,61,62,32,49,41,59,10,32,32,32,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,40,41,32,61,62,32,50,41,59,10,32,32,32,32,117,110,115,117,98,115,99,114,105,98,101,40,41,59,10,32,32,32,32,101,120,112,101,99,116,40,101,118,101,110,116,46,116,114,105,103,103,101,114,40,41,41,46,116,111,69,113,117,97,108,40,91,50,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,97,108,108,111,119,115,32,114,101,112,101,97,116,101,100,32,99,97,108,108,115,32,116,111,32,117,110,115,117,98,115,99,114,105,98,101,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,101,118,101,110,116,32,61,32,95,46,99,114,101,97,116,101,69,118,101,110,116,69,109,105,116,116,101,114,40,41,59,10,10,32,32,32,32,99,111,110,115,116,32,117,110,115,117,98,115,99,114,105,98,101,32,61,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,40,41,32,61,62,32,49,41,59,10,32,32,32,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,40,41,32,61,62,32,50,41,59,10,32,32,32,32,117,110,115,117,98,115,99,114,105,98,101,40,41,59,10,32,32,32,32,117,110,115,117,98,115,99,114,105,98,101,40,41,59,10,32,32,32,32,101,120,112,101,99,116,40,101,118,101,110,116,46,116,114,105,103,103,101,114,40,41,41,46,116,111,69,113,117,97,108,40,91,50,93,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,99,97,110,32,117,110,115,117,98,115,99,114,105,98,101,32,116,104,101,32,99,111,114,114,101,99,116,32,102,117,110,99,116,105,111,110,44,32,101,118,101,110,32,105,102,32,116,104,101,32,102,117,110,99,116,105,111,110,32,105,100,101,110,116,105,116,121,32,100,111,101,115,32,110,111,116,32,99,104,97,110,103,101,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,47,47,32,84,101,115,116,101,100,32,98,121,32,117,110,115,117,98,115,99,114,105,98,105,110,103,32,109,117,108,116,105,112,108,101,32,116,105,109,101,115,44,32,98,117,116,32,111,110,108,121,32,101,120,112,101,99,116,105,110,103,32,111,110,101,32,117,110,115,117,98,115,99,114,105,98,101,32,116,111,32,104,97,112,112,101,110,10,32,32,32,32,99,111,110,115,116,32,102,110,32,61,32,40,41,32,61,62,32,50,59,10,10,32,32,32,32,99,111,110,115,116,32,101,118,101,110,116,32,61,32,95,46,99,114,101,97,116,101,69,118,101,110,116,69,109,105,116,116,101,114,40,41,59,10,32,32,32,32,99,111,110,115,116,32,117,110,115,117,98,115,99,114,105,98,101,32,61,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,102,110,41,59,10,32,32,32,32,101,118,101,110,116,46,115,117,98,115,99,114,105,98,101,40,102,110,41,59,10,32,32,32,32,117,110,115,117,98,115,99,114,105,98,101,40,41,59,10,32,32,32,32,117,110,115,117,98,115,99,114,105,98,101,40,41,59,10,32,32,32,32,101,120,112,101,99,116,40,101,118,101,110,116,46,116,114,105,103,103,101,114,40,41,41,46,116,111,69,113,117,97,108,40,91,50,93,41,59,10,32,32,125,41,59,10,125,41,59,10]}},{"name":"addToDate","manifest":{"fnSignature":"addToDate(date, offset)","summary":"Returns a new date with year/month/day offsets added the `date`"},"description":"","src":"function addToDate(date_, offset) {\n  const {\n    years = 0,\n    months = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n    ms = 0,\n  } = offset;\n\n  const date = new Date(date_.valueOf());\n  date.setFullYear(date.getFullYear() + years);\n  date.setMonth(date.getMonth() + months);\n  date.setDate(date.getDate() + days);\n  date.setHours(date.getHours() + hours);\n  date.setMinutes(date.getMinutes() + minutes);\n  date.setSeconds(date.getSeconds() + seconds);\n  date.setMilliseconds(date.getMilliseconds() + ms);\n  return date;\n}\n","test":{"type":"Buffer","data":[100,101,115,99,114,105,98,101,40,39,97,100,100,84,111,68,97,116,101,40,41,39,44,32,40,41,32,61,62,32,123,10,32,32,105,116,40,39,115,104,111,117,108,100,32,98,101,32,97,98,108,101,32,116,111,32,97,100,100,32,121,101,97,114,115,32,116,111,32,116,104,101,32,100,97,116,101,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,108,100,68,97,116,101,32,61,32,110,101,119,32,68,97,116,101,40,50,48,48,48,44,32,53,44,32,51,41,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,68,97,116,101,32,61,32,95,46,97,100,100,84,111,68,97,116,101,40,111,108,100,68,97,116,101,44,32,123,32,121,101,97,114,115,58,32,50,32,125,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,68,97,116,101,46,116,111,83,116,114,105,110,103,40,41,41,46,116,111,66,101,40,110,101,119,32,68,97,116,101,40,50,48,48,50,44,32,53,44,32,51,41,46,116,111,83,116,114,105,110,103,40,41,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,115,104,111,117,108,100,32,98,101,32,97,98,108,101,32,116,111,32,97,100,100,32,109,111,110,116,104,115,32,116,111,32,116,104,101,32,100,97,116,101,44,32,97,110,100,32,104,97,118,101,32,105,116,32,119,114,97,112,32,116,111,32,97,32,110,101,119,32,121,101,97,114,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,108,100,68,97,116,101,32,61,32,110,101,119,32,68,97,116,101,40,50,48,48,48,44,32,49,48,44,32,51,41,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,68,97,116,101,32,61,32,95,46,97,100,100,84,111,68,97,116,101,40,111,108,100,68,97,116,101,44,32,123,32,109,111,110,116,104,115,58,32,51,32,125,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,68,97,116,101,46,116,111,83,116,114,105,110,103,40,41,41,46,116,111,66,101,40,110,101,119,32,68,97,116,101,40,50,48,48,49,44,32,49,44,32,51,41,46,116,111,83,116,114,105,110,103,40,41,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,115,104,111,117,108,100,32,98,101,32,97,98,108,101,32,116,111,32,97,100,100,32,100,97,121,115,32,116,111,32,116,104,101,32,100,97,116,101,44,32,97,110,100,32,104,97,118,101,32,105,116,32,119,114,97,112,32,116,111,32,97,32,110,101,119,32,121,101,97,114,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,108,100,68,97,116,101,32,61,32,110,101,119,32,68,97,116,101,40,50,48,48,48,44,32,49,49,44,32,50,57,41,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,68,97,116,101,32,61,32,95,46,97,100,100,84,111,68,97,116,101,40,111,108,100,68,97,116,101,44,32,123,32,100,97,121,115,58,32,52,32,125,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,68,97,116,101,46,116,111,83,116,114,105,110,103,40,41,41,46,116,111,66,101,40,110,101,119,32,68,97,116,101,40,50,48,48,49,44,32,48,44,32,50,41,46,116,111,83,116,114,105,110,103,40,41,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,115,104,111,117,108,100,32,98,101,32,97,98,108,101,32,116,111,32,97,100,100,32,104,111,117,114,115,32,116,111,32,116,104,101,32,100,97,116,101,44,32,97,110,100,32,104,97,118,101,32,105,116,32,119,114,97,112,32,116,111,32,97,32,110,101,119,32,121,101,97,114,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,108,100,68,97,116,101,32,61,32,110,101,119,32,68,97,116,101,40,50,48,48,48,44,32,49,49,44,32,51,49,44,32,50,51,41,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,68,97,116,101,32,61,32,95,46,97,100,100,84,111,68,97,116,101,40,111,108,100,68,97,116,101,44,32,123,32,104,111,117,114,115,58,32,50,32,125,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,68,97,116,101,46,116,111,83,116,114,105,110,103,40,41,41,46,116,111,66,101,40,110,101,119,32,68,97,116,101,40,50,48,48,49,44,32,48,44,32,49,44,32,49,41,46,116,111,83,116,114,105,110,103,40,41,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,115,104,111,117,108,100,32,98,101,32,97,98,108,101,32,116,111,32,97,100,100,32,109,105,110,117,116,101,115,32,116,111,32,116,104,101,32,100,97,116,101,44,32,97,110,100,32,104,97,118,101,32,105,116,32,119,114,97,112,32,116,111,32,97,32,110,101,119,32,121,101,97,114,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,108,100,68,97,116,101,32,61,32,110,101,119,32,68,97,116,101,40,50,48,48,48,44,32,49,49,44,32,51,49,44,32,50,52,44,32,53,57,41,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,68,97,116,101,32,61,32,95,46,97,100,100,84,111,68,97,116,101,40,111,108,100,68,97,116,101,44,32,123,32,109,105,110,117,116,101,115,58,32,50,32,125,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,68,97,116,101,46,116,111,83,116,114,105,110,103,40,41,41,46,116,111,66,101,40,110,101,119,32,68,97,116,101,40,50,48,48,49,44,32,48,44,32,49,44,32,49,44,32,49,41,46,116,111,83,116,114,105,110,103,40,41,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,115,104,111,117,108,100,32,98,101,32,97,98,108,101,32,116,111,32,97,100,100,32,115,101,99,111,110,100,115,32,116,111,32,116,104,101,32,100,97,116,101,44,32,97,110,100,32,104,97,118,101,32,105,116,32,119,114,97,112,32,116,111,32,97,32,110,101,119,32,121,101,97,114,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,108,100,68,97,116,101,32,61,32,110,101,119,32,68,97,116,101,40,50,48,48,48,44,32,49,49,44,32,51,49,44,32,50,52,44,32,53,57,44,32,53,57,41,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,68,97,116,101,32,61,32,95,46,97,100,100,84,111,68,97,116,101,40,111,108,100,68,97,116,101,44,32,123,32,115,101,99,111,110,100,115,58,32,50,32,125,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,68,97,116,101,46,116,111,83,116,114,105,110,103,40,41,41,46,116,111,66,101,40,110,101,119,32,68,97,116,101,40,50,48,48,49,44,32,48,44,32,49,44,32,49,44,32,48,44,32,49,41,46,116,111,83,116,114,105,110,103,40,41,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,115,104,111,117,108,100,32,98,101,32,97,98,108,101,32,116,111,32,97,100,100,32,109,105,108,108,105,115,101,99,111,110,100,115,32,116,111,32,116,104,101,32,100,97,116,101,44,32,97,110,100,32,104,97,118,101,32,105,116,32,119,114,97,112,32,116,111,32,97,32,110,101,119,32,121,101,97,114,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,108,100,68,97,116,101,32,61,32,110,101,119,32,68,97,116,101,40,50,48,48,48,44,32,49,49,44,32,51,49,44,32,50,52,44,32,53,57,44,32,53,57,44,32,57,57,57,41,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,68,97,116,101,32,61,32,95,46,97,100,100,84,111,68,97,116,101,40,111,108,100,68,97,116,101,44,32,123,32,109,115,58,32,50,32,125,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,68,97,116,101,46,116,111,83,116,114,105,110,103,40,41,41,46,116,111,66,101,40,10,32,32,32,32,32,32,110,101,119,32,68,97,116,101,40,50,48,48,49,44,32,48,44,32,49,44,32,49,44,32,48,44,32,48,44,32,49,41,46,116,111,83,116,114,105,110,103,40,41,10,32,32,32,32,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,115,104,111,117,108,100,32,98,101,32,97,98,108,101,32,116,111,32,117,112,100,97,116,101,32,97,108,108,32,97,116,116,114,105,98,117,116,101,115,32,97,116,32,116,104,101,32,115,97,109,101,32,116,105,109,101,46,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,108,100,68,97,116,101,32,61,32,110,101,119,32,68,97,116,101,40,50,48,48,48,44,32,49,44,32,50,44,32,51,44,32,52,44,32,53,44,32,54,44,32,55,41,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,68,97,116,101,32,61,32,95,46,97,100,100,84,111,68,97,116,101,40,111,108,100,68,97,116,101,44,32,123,10,32,32,32,32,32,32,121,101,97,114,115,58,32,49,44,10,32,32,32,32,32,32,109,111,110,116,104,115,58,32,50,44,10,32,32,32,32,32,32,100,97,121,115,58,32,51,44,10,32,32,32,32,32,32,104,111,117,114,115,58,32,52,44,10,32,32,32,32,32,32,109,105,110,117,116,101,115,58,32,53,44,10,32,32,32,32,32,32,115,101,99,111,110,100,115,58,32,54,44,10,32,32,32,32,32,32,109,115,58,32,55,44,10,32,32,32,32,125,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,68,97,116,101,46,116,111,83,116,114,105,110,103,40,41,41,46,116,111,66,101,40,10,32,32,32,32,32,32,110,101,119,32,68,97,116,101,40,50,48,48,49,44,32,51,44,32,53,44,32,55,44,32,57,44,32,49,49,44,32,49,51,44,32,49,53,41,46,116,111,83,116,114,105,110,103,40,41,10,32,32,32,32,41,59,10,32,32,125,41,59,10,10,32,32,105,116,40,39,115,104,111,117,108,100,32,115,117,112,112,111,114,116,32,110,101,103,97,116,105,118,101,32,100,101,108,116,97,115,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,111,108,100,68,97,116,101,32,61,32,110,101,119,32,68,97,116,101,40,50,48,48,49,44,32,51,44,32,53,44,32,55,44,32,57,44,32,49,49,44,32,49,51,44,32,49,53,41,59,10,32,32,32,32,99,111,110,115,116,32,110,101,119,68,97,116,101,32,61,32,95,46,97,100,100,84,111,68,97,116,101,40,111,108,100,68,97,116,101,44,32,123,10,32,32,32,32,32,32,121,101,97,114,115,58,32,45,49,44,10,32,32,32,32,32,32,109,111,110,116,104,115,58,32,45,50,44,10,32,32,32,32,32,32,100,97,121,115,58,32,45,51,44,10,32,32,32,32,32,32,104,111,117,114,115,58,32,45,52,44,10,32,32,32,32,32,32,109,105,110,117,116,101,115,58,32,45,53,44,10,32,32,32,32,32,32,115,101,99,111,110,100,115,58,32,45,54,44,10,32,32,32,32,32,32,109,115,58,32,45,55,44,10,32,32,32,32,125,41,59,10,32,32,32,32,101,120,112,101,99,116,40,110,101,119,68,97,116,101,46,116,111,83,116,114,105,110,103,40,41,41,46,116,111,66,101,40,10,32,32,32,32,32,32,110,101,119,32,68,97,116,101,40,50,48,48,48,44,32,49,44,32,50,44,32,51,44,32,52,44,32,53,44,32,54,44,32,55,41,46,116,111,83,116,114,105,110,103,40,41,10,32,32,32,32,41,59,10,32,32,125,41,59,10,125,41,59,10]}}]}]